---
- name: Prepares target hosts to Galaxie's playbooks
  hosts: galaxie
  sudo: yes

  vars_files:
    - "galaxie-vars.yml"

  tasks:
    - name: New key is present
      when: newKey is defined
      stat:
        path="{{newKey}}"
      register: localKey
      delegate_to: localhost
      sudo: no

    - name: New key not present => generation
      command: "ssh-keygen -t rsa -b 2048 -f {{newKey}}"
      when: newKey is defined and not localKey.stat.exists
      delegate_to: localhost
      sudo: no

    - name: Group is present
      group:
        name="{{ galaxie.user }}"
        gid=4200
        state=present

    - name: User is present
      user:
        name="{{ galaxie.user }}"
        uid=4200
        groups="{{ galaxie.user }},sudo"
        generate_ssh_key=yes
        state=present

    - name: Change password
      shell: usermod -p $(echo '{{ galaxie.randomPasswordSeed }}' | openssl passwd -1 -stdin) {{ galaxie.user }}

    - name: New key is authorized for user
      when: newKey is defined
      authorized_key:
        user="{{ galaxie.user }}"
        key="{{ lookup('file', newKey+'.pub') }}"
        state=present

    - name: Current key is banished for user
      when: newKey is defined and ansible_ssh_private_key_file is defined
      authorized_key:
        user="{{ galaxie.user }}"
        key="{{ lookup('file', ansible_ssh_private_key_file+'.pub') }}"
        state=absent

    - name: check python-apt package present
      shell: dpkg -s python-apt
      ignore_errors: yes
      register: pythonAptPresence
      when: ansible_distribution == 'Debian'

    - name: install python-apt (update apt before installation)
      command: /usr/bin/apt-get update -y
      when: ansible_distribution == 'Debian' and pythonAptPresence|failed

    - name: install python-apt
      command: /usr/bin/apt-get install python-apt -y
      when: ansible_distribution == 'Debian' and pythonAptPresence|failed

    - name: install sudo
      apt:
        pkg=sudo
        state=present
        update-cache=yes
        cache_valid_time=3600
      when: ansible_distribution == 'Debian'

    - name: User is sudoer
      lineinfile: "dest=/etc/sudoers state='present' regexp='^zoe' line='zoe ALL=(ALL) NOPASSWD: ALL' validate='visudo -cf %s' "

    - name: system upgrade
      apt:
        upgrade=yes
      when: ansible_distribution == 'Debian'

    - name: next step
      debug: msg="Integrated in Zoe's family, change 'newKey' to 'ansible_ssh_private_key_file' in your inventory for server {{ inventory_hostname }}"
      when: newKey is defined


