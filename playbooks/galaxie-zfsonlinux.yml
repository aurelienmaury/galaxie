- hosts: galaxie_pvr
  sudo: true

  vars:
    build_dir: /usr/src/galaxie_zfsonlinux_build_
    git_spl_src: https://github.com/zfsonlinux/spl.git
    git_zfs_src: https://github.com/zfsonlinux/zfs.git

  tasks:
   - name: Update Apt
     apt: update_cache=yes cache_valid_time=3600

   - name: Install required software
     action: apt pkg={{item}} state=installed
     with_items:
      - zlib1g-dev
      - uuid-dev
      - libblkid-dev
      - libselinux-dev
      - parted
      - lsscsi
      - wget
      - build-essential
      - gawk
      - alien
      - fakeroot
      - linux-headers-amd64
      - dh-autoreconf

   - action: shell date '+%F'
     register: mydate
 
   - name: Delete previous installation
     file:
      path={{ build_dir  }}{{ mydate.stdout }}
      state=absent

   - name: Creates directory {{ build_dir  }}{{ mydate.stdout }}
     file:
      dest={{ build_dir  }}{{ mydate.stdout }}
      state=directory

   - name: Download Git master of SPL
     git:
      repo={{ git_spl_src  }}
      dest={{ build_dir  }}{{ mydate.stdout }}/spl

   - name: Building SPL (autogen) ...
     shell:
      chdir={{ build_dir  }}{{ mydate.stdout }}/spl ./autogen.sh

   - name: Building SPL (configure) ...
     shell:
      chdir={{ build_dir  }}{{ mydate.stdout }}/spl ./configure

   - name: Building SPL (make deb-utils deb-kmod) ...
     shell:
      chdir={{ build_dir  }}{{ mydate.stdout }}/spl make deb-utils deb-kmod

   - name : Install SPL Packages
     action: shell dpkg -i {{ build_dir  }}{{ mydate.stdout }}/spl/*.deb

   - name: Download Git master of ZFS
     git:
      repo={{ git_zfs_src  }}
      dest={{ build_dir  }}{{ mydate.stdout }}/zfs

   - name: Building ZFS (autogen) ...
     shell: chdir={{ build_dir  }}{{ mydate.stdout }}/zfs ./autogen.sh

   - name: Building ZFS (configure) ...
     shell: chdir={{ build_dir  }}{{ mydate.stdout }}/zfs ./configure

   - name: Building ZFS (make deb-utils deb-kmod) ...
     shell: chdir={{ build_dir  }}{{ mydate.stdout }}/zfs make deb-utils deb-kmod

   - name : Install ZFS Packages
     action: shell dpkg -i {{ build_dir  }}{{ mydate.stdout }}/zfs/*.deb
     notify: restart zfs

  handlers:
   - name: restart zfs
     service: name=zfs state=restarted
