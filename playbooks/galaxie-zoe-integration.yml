---
- name: Prepares target hosts to Galaxie's playbooks
  hosts: galaxie
  sudo: yes
  vars_files:
    - "galaxie-vars.yml"

  vars_prompt:
    newPassword: "Which password to set for current connection user? (Blank if you don't want to change)"

  tasks:
    - name: New key is present
      when: newKey is defined
      stat:
        path="{{newKey}}"
      register: localKey
      delegate_to: localhost
      sudo: no

    - name: New key not present => generation
      command: "ssh-keygen -t rsa -b 2048 -f {{newKey}}"
      when: newKey is defined and not localKey.stat.exists
      delegate_to: localhost
      sudo: no

    - name: check python-apt package present
      shell: dpkg -s python-apt
      ignore_errors: yes
      register: pythonAptPresence
      when: ansible_distribution == 'Debian'

    - name: install python-apt (update apt before installation)
      command: /usr/bin/apt-get update -y
      when: ansible_distribution == 'Debian' and pythonAptPresence|failed

    - name: install python-apt
      command: /usr/bin/apt-get install python-apt -y
      when: ansible_distribution == 'Debian' and pythonAptPresence|failed

    - name: install sudo
      apt:
        pkg=sudo
        state=present
        update-cache=yes
        cache_valid_time=3600
      when: ansible_distribution == 'Debian'

    - name: Group is present
      group:
        name="{{ galaxie.user }}"
        gid=4200
        state=present

    - name: User is present
      user:
        name="{{ galaxie.user }}"
        uid=4200
        groups="{{ galaxie.user }},sudo"
        generate_ssh_key=yes
        state=present
        shell=/bin/bash

    - name: /home/{{ galaxie.user }}/.bashrc is ok
      copy:
        src=files/etc/skel/.bashrc
        dest=/home/{{ galaxie.user }}/.bashrc
        owner={{ galaxie.user }}
        group={{ galaxie.user }}
        mode=0644

    - name: Change password for galaxie
      shell: usermod -p $(echo '{{ galaxie.randomPasswordSeed }}' | openssl passwd -1 -stdin) {{ galaxie.user }}

    - name: Change password for current user
      shell: usermod -p $(echo '{{ galaxie.randomPasswordSeed }}' | mkpasswd --method=SHA-512 --stdin) {{ ansible_user_id }}
      when: newPassword is defined and newPassword != ""

    - name: New key is authorized for user
      when: newKey is defined
      authorized_key:
        user="{{ galaxie.user }}"
        key="{{ lookup('file', newKey+'.pub') }}"
        state=present

    - name: Current key is banished for user
      when: newKey is defined and ansible_ssh_private_key_file is defined
      authorized_key:
        user="{{ galaxie.user }}"
        key="{{ lookup('file', ansible_ssh_private_key_file+'.pub') }}"
        state=absent

    - name: User is sudoer
      lineinfile: "dest=/etc/sudoers state='present' regexp='^zoe' line='zoe ALL=(ALL) NOPASSWD: ALL' validate='visudo -cf %s' "

    - name: system upgrade
      apt:
        upgrade=yes
      when: ansible_distribution == 'Debian'

    - name: install ntp
      apt:
        pkg=ntp
        state=present
        update-cache=yes
        cache_valid_time=3600
      when: ansible_distribution == 'Debian'

    - name: ntp is configured
      template:
        src=templates/ntp.conf.j2
        dest=/etc/ntp.conf

    - name: restart ntp (always)
      service:
        name=ntp
        state=restarted

    - name: waiting for ntp sync (up to 15 minutes, in general under 1 minute)
      action: shell /usr/bin/ntpq --peers | /usr/bin/tr -s " " | /usr/bin/cut -d " " -f1,2 | /bin/grep -e "^\*" | /bin/grep -v "127\."
      register: ntpSync
      until: ntpSync.stdout != ""
      retries: 90
      delay: 10

# regenerer les cl√©s serveur
# http://www.cyberciti.biz/faq/howto-regenerate-openssh-host-keys/

    - name: CHECK - key generation trace is present
      shell: if [ -f "/etc/ssh/.zoe_generated_keys" ]; then /bin/true; else /bin/false; fi
      register: zoe_generated_keys
      ignore_errors: true

#    - name: cleaning old ssh_keys
#      shell: /bin/rm -f /etc/ssh/ssh_host_*
#      when: zoe_generated_keys|failed

#    - name: cleaning old ssh_keys
#      shell: /usr/sbin/dpkg-reconfigure openssh-server
#      when: zoe_generated_keys|failed

    - name: leaving trace of key generation
      file:
        path=/etc/ssh/.zoe_generated_keys
        owner=root
        group=root
        state=touch
      when: zoe_generated_keys|failed

    - debug: msg="new server keys generated, update your ~/.ssh/known_hosts or you'll get a warning on next connection."
      when: zoe_generated_keys|failed

    - name: next step
      debug: msg="Integrated in Zoe's family, change 'newKey' to 'ansible_ssh_private_key_file' in your inventory for server {{ inventory_hostname }}"
      when: newKey is defined
