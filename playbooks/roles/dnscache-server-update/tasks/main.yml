---
- name: Create temp file {{ dnsroots_global_file }}.XXXXXXXXX
  command: mktemp {{ dnsroots_global_file }}.XXXXXXXXX
  changed_when: False
  register: tmp_file

- name: test if we can resolv "{{ host_for_test }}" by default
  shell: "host {{ host_for_test }}"
  changed_when: False
  register: ResolverCheck

- name: Seed dnsroots
  shell: "dnsip `dnsqr ns . | awk '/answer:/ { print $5; }' |sort`  > {{ tmp_file.stdout }}"
  changed_when: False
  register: SeedDnsroot

- name: Stat of {{ dnsroots_global_file }}
  stat:
    path="{{ dnsroots_global_file }}"
  register: dnsroots_global_file

- name: "Stat of {{ tmp_file.stdout }}"
  stat:
    path="{{ tmp_file.stdout }}"
  register: dnsroots_global_tmp_file

- name: Update {{ dnsroots_global_file }}
  command: cp {{ tmp_file.stdout }} {{ dnsroots_global_file }}
  when: "'{{dnsroots_global_file.stat.checksum}}' != '{{dnsroots_global_tmp_file.stat.checksum}}'"

- name: Update dnscache dnsroots list
  command: cp {{ dnsroots_global_file }} {{ supervise_dir }}/{{ service_name }}/root/servers/@
  when: "'{{dnsroots_global_file.stat.checksum}}' != '{{dnsroots_global_tmp_file.stat.checksum}}'"
  notify:
    - restart service

- name: Delete {{ tmp_file.stdout }}
  file: path={{ tmp_file.stdout }} state=absent
  changed_when: False
  always_run: true
