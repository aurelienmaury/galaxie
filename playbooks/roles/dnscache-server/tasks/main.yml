---

- name: activate source debian sid main contrib non-free repository
  apt_repository:
    repo='deb-src http://ftp.fr.debian.org/debian/ sid main contrib non-free'
    state=present

- name: kill bind
  apt:
    pkg=bind9
    state=absent

- name: check djbdns installed
  shell: "dpkg -l | grep djbdns"
  failed_when: "djb_installed.rc == 2"
  changed_when: "djb_installed.rc == 1"
  register: djb_installed
  ignore_errors: yes

- name: packages for djbdns building
  apt:
    pkg="{{ item }}"
    state=present
  with_items:
    - build-essential
    - daemontools
    - daemontools-run
    - ucspi-tcp
  when: djb_installed|failed

- name: source directory for djbdns building
  file:
    path="{{ galaxie_dnscache_server_source_dir }}"
    state=directory
    owner=root
    group=root
    mode=0755
  when: djb_installed|failed

- name: sourcing and compiling djbdns
  shell: "cd {{ galaxie_dnscache_server_source_dir }} && apt-get source dbndns --compile -y"
  when: djb_installed|failed

- name: install djbdns package
  shell: "dpkg -i {{ galaxie_dnscache_server_source_dir }}/djbdns_1.05-8_*.deb"
  when: djb_installed|failed

- name: dnscache users
  user:
    name={{ item }}
    system=yes
    createhome=no
    state=present
  with_items:
    - dnscache
    - dnslog

- name: dnscache run directory
  file:
    path="{{ galaxie_dnscache_server_supervise_dir }}"
    state=directory
    owner=root
    group=root
    mode=0755

- name: check dnscache-conf output directory exists
  shell: "test -d {{ galaxie_dnscache_server_supervise_dir }}/{{ galaxie_dnscache_server_service_name }}"
  failed_when: "superviseExists.rc == 2"
  changed_when: "superviseExists.rc == 1"
  register: superviseExists
  ignore_errors: yes

- name: dnscache-conf
  when: superviseExists|failed
  shell: "dnscache-conf {{ galaxie_dnscache_server_service_name }} {{ galaxie_dnscache_server_dnslog_user }} {{ galaxie_dnscache_server_supervise_dir }}/{{ galaxie_dnscache_server_service_name }} {{ galaxie_dnscache_server_interface }}"

- name: point logger to correct service
  lineinfile:
    dest={{ galaxie_dnscache_server_supervise_dir }}/{{ galaxie_dnscache_server_service_name }}/log/run
    regexp='^exec'
    line='exec setuidgid {{ galaxie_dnscache_server_dnslog_user }} {{ galaxie_dnscache_server_multilog_user }} t {{ galaxie_dnscache_server_multilog_dir }}/{{ galaxie_dnscache_server_service_name }}'
    backup=yes

- name: delete old logger launcher
  file:
    path="{{ galaxie_dnscache_server_supervise_dir }}/{{ galaxie_dnscache_server_service_name }}/log/main"
    state=absent

- name: create multilog directory
  file:
    path="{{ galaxie_dnscache_server_multilog_dir }}/{{ galaxie_dnscache_server_service_name }}"
    owner="{{ galaxie_dnscache_server_dnslog_user }}"
    group="{{ galaxie_dnscache_server_dnslog_user }}"
    state=directory
    mode=2755

# Deal with LAN things
- name: Write {{ galaxie_dnscache_server_internal_nameserver }} in {{ galaxie_dnscache_server_supervise_dir }}/{{ galaxie_dnscache_server_service_name }}/root/servers/{{ galaxie_dnscache_server_internal_domain }}
  template:
    src=local-domain-server.j2
    dest={{ galaxie_dnscache_server_supervise_dir }}/{{ galaxie_dnscache_server_service_name }}/root/servers/{{ galaxie_dnscache_server_internal_domain }}
    backup=no
  when: inventory_hostname in groups["internal-machines"]
  notify:
    - restart service

# Deal with LAN reverse things
- name: Write {{ galaxie_dnscache_server_internal_nameserver }} in {{ galaxie_dnscache_server_supervise_dir }}/{{ galaxie_dnscache_server_service_name }}/root/servers/{{ galaxie_dnscache_server_internal_reserse_nameserver }}
  template:
    src=local-domain-server.j2
    dest={{ galaxie_dnscache_server_supervise_dir }}/{{ galaxie_dnscache_server_service_name }}/root/servers/{{ galaxie_dnscache_server_internal_reserse_nameserver }}
    backup=no
  when: inventory_hostname in groups["internal-machines"]
  notify:
    - restart service

- name: check if service registered
  shell: "/usr/sbin/update-service --list | grep {{ galaxie_dnscache_server_service_name }}"
  failed_when: "serviceRegistered.rc == 2"
  changed_when: "serviceRegistered.rc == 1"
  register: serviceRegistered
  ignore_errors: yes
  notify:
    - register service
    - restart service

#- name: enable local server name resolution
#  template:
#    src=templates/etc_resolv.j2
#    dest=/etc/resolv.conf
#    backup=yes