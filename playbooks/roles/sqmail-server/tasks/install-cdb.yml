---
- name: uninstall libcdb1
  apt:
    pkg={{ item }}
    state=absent
  with_items:
    - libcdb1

- name: check {{ glx_slashpackage_dir }} directory
  file:
    path="{{ glx_slashpackage_dir }}"
    state=directory
    mode=1755

- name: check {{ glx_cdb_source_dir }} directory
  file:
    path="{{ glx_cdb_source_dir }}"
    state=directory

- name: delete "{{ glx_cdb_source_dir }}/{{ glx_cdb_app_name }}.{{ glx_cdb_extension }}"
  file:
    path="{{ glx_cdb_source_dir }}/{{ glx_cdb_app_name }}.{{ glx_cdb_extension }}"
    state=absent
  when: glx_cdb_force_install

- name: get "{{ glx_cdb_download_url }}"
  get_url:
    url="{{ glx_cdb_download_url }}"
    dest={{ glx_cdb_source_dir }}
    sha256sum=1919577799a50c080a8a05a1cbfa5fa7e7abc823d8d7df2eeb181e624b7952c5
  register: glx_cdb_source_download

- name: delete "{{ glx_cdb_source_dir }}/{{ glx_cdb_app_name }}" directory
  file:
    path="{{ glx_cdb_source_dir }}/{{ glx_cdb_app_name }}"
    state=absent
  when: glx_cdb_source_download.changed

- name: unarchive {{ glx_cdb_source_download.dest }}
  unarchive:
    src="{{ glx_cdb_source_download.dest }}"
    dest="{{ glx_cdb_source_dir }}"
    copy=no
  when: glx_cdb_source_download.changed

#- name: send cdb-0.75.errno.patch to "{{ glx_cdb_source_dir }}"
#  copy:
#    src=cdb-0.75.errno.patch
#    dest="{{ glx_cdb_source_dir }}/cdb-0.75.errno.patch"
#  when: glx_cdb_source_download.changed
#
#- name: apply cdb-0.75.errno.patch
#  shell: patch < {{ glx_cdb_source_dir }}/cdb-0.75.errno.patch
#    chdir="{{ glx_cdb_source_dir }}/{{ glx_cdb_app_name }}"
#  changed_when: false
#  when: glx_cdb_source_download.changed

# conf-ld -- loader options to be adjusted (for i386; AMD64 normalydefault)
- name: check DEB_BUILD_ARCH
  shell: dpkg-architecture 2>&1 | grep '^DEB_BUILD_ARCH=' | cut -d'=' -f2
  when: ansible_os_family == "Debian"
  register: DEB_BUILD_ARCH
  changed_when: false

# send conf-* files
- name: check conf-*
  template:
    src="cdb/{{ item }}.j2"
    dest="{{ glx_cdb_source_dir }}/{{ glx_cdb_app_name }}/{{ item }}"
  with_items:
    - "conf-cc"
    - "conf-home"
    - "conf-ld"

- name: build {{ glx_cdb_app_name }} on "{{ glx_cdb_source_dir }}" directory
  shell: make
    chdir="{{ glx_cdb_source_dir }}/{{ glx_cdb_app_name }}"
  changed_when: false

- name: install {{ glx_cdb_app_name }}
  shell: make setup check
    chdir="{{ glx_cdb_source_dir }}/{{ glx_cdb_app_name }}"
  changed_when: false