---

- name: Check directorys
  file:
    path="{{item}}"
    owner=root
    group=root
    state=directory
    mode=0755
  with_items:
    - "{{ cache_dir }}"
    - "{{ optional_applications_dir }}"

- name: Check for last version
  script: get_basename_by_url.sh '{{ downloader_url }}'
  register: filename
  failed_when: not filename.stdout
  changed_when: False

#- debug: msg="{{ filename.stdout_lines[0] }}"

- name: Force installation
  file:
    path="{{ cache_dir }}/{{ filename.stdout_lines[0] }}"
    state=absent
  when: force

- name: Download {{ filename.stdout_lines[0] }}
  get_url:
    url="{{ downloader_url }}"
    dest="{{ cache_dir }}/{{ filename.stdout_lines[0] }}"
  register: download_status
  failed_when: not downloader_url

- name: Delete {{ app_root_dir }}
  file:
    path={{ app_root_dir }}
    state=absent
  when: download_status.changed

- name: Unarchive {{ download_status.dest }}
  unarchive:
    src="{{ download_status.dest }}"
    dest="{{ optional_applications_dir }}"
    copy=no
  when: download_status.changed

- name: Set permissions of {{ app_root_dir }}
  file:
    path={{ app_root_dir }}
    owner=root
    group=root
    state=directory
    mode=0755

- name: Change owner of {{ app_root_dir }}
  file:
    path={{ app_root_dir }}
    owner=root
    group=root
    recurse=yes

- name: Creat /usr/share/applications/xonotic.desktop is ok
  template:
    src=templates/xonotic.desktop.j2
    dest=/usr/share/applications/xonotic.desktop
    backup=no
